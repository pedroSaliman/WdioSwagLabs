/// <reference types="node" resolution-mode="require"/>
import type { Status } from '../types.js';
/**
 * Assign feature to test
 * @name addFeature
 * @param {(string)} featureName - feature name or an array of names
 */
export declare function addFeature(featureName: string): void;
/**
 * Assign label to test
 * @name addLabel
 * @param {string} name - label name
 * @param {string} value - label value
 */
export declare function addLabel(name: string, value: string): void;
/**
 * Assign severity to test
 * @name addSeverity
 * @param {string} severity - severity value
 */
export declare function addSeverity(severity: string): void;
/**
 * Assign issue id to test
 * @name addIssue
 * @param {string} issue - issue id value
 */
export declare function addIssue(issue: string): void;
/**
 * Assign TMS test id to test
 * @name addTestId
 * @param {string} testId - test id value
 */
export declare function addTestId(testId: string): void;
/**
 * Assign story to test
 * @name addStory
 * @param {string} storyName - story name for test
 */
export declare function addStory(storyName: string): void;
/**
 * Add environment value
 * @name addEnvironment
 * @param {string} name - environment name
 * @param {string} value - environment value
 */
export declare function addEnvironment(name: string, value: string): void;
/**
 * Assign test description to test
 * @name addDescription
 * @param {string} description - description for test
 * @param {string} descriptionType - description type 'text'\'html'\'markdown'
 */
export declare function addDescription(description: string, descriptionType: string): void;
/**
 * Add attachment
 * @name addAttachment
 * @param {string} name         - attachment file name
 * @param {*} content           - attachment content
 * @param {string=} mimeType    - attachment mime type
 */
export declare function addAttachment(name: string, content: string | Buffer | object, type: string): void;
/**
 * Start allure step
 * @name startStep
 * @param {string} title - step name in report
 */
export declare function startStep(title: string): void;
/**
 * End current allure step
 * @name endStep
 * @param {StepStatus} [status='passed'] - step status
 */
export declare function endStep(status?: Status): void;
/**
 * Create allure step
 * @name addStep
 * @param {string} title - step name in report
 * @param {Object} [attachmentObject={}] - attachment for step
 * @param {string} attachmentObject.content - attachment content
 * @param {string} [attachmentObject.name='attachment'] - attachment name
 * @param {string} [attachmentObject.type='text/plain'] - attachment type
 * @param {string} [status='passed'] - step status
 */
export declare function addStep(title: string, { content, name, type }?: any, status?: Status): void;
/**
 * Add additional argument to test
 * @name addArgument
 * @param {string} name - argument name
 * @param {string} value - argument value
 */
export declare function addArgument(name: string, value: string): void;
declare const _default: {
    addFeature: typeof addFeature;
    addLabel: typeof addLabel;
    addSeverity: typeof addSeverity;
    addIssue: typeof addIssue;
    addTestId: typeof addTestId;
    addStory: typeof addStory;
    addEnvironment: typeof addEnvironment;
    addDescription: typeof addDescription;
    addAttachment: typeof addAttachment;
    startStep: typeof startStep;
    endStep: typeof endStep;
    addStep: typeof addStep;
    addArgument: typeof addArgument;
};
export default _default;
//# sourceMappingURL=api.d.ts.map